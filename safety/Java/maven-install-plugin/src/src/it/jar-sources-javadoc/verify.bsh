/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import java.io.*;
import java.util.*;
import java.lang.*;

import org.apache.maven.plugins.install.Utils;

String[] paths =
{
    "org/apache/maven/its/install/jsj/test/maven-metadata-local.xml",
    "org/apache/maven/its/install/jsj/test/0.1/test-0.1.jar",
    "org/apache/maven/its/install/jsj/test/0.1/test-0.1.pom",
    "org/apache/maven/its/install/jsj/test/0.1/test-0.1-sources.jar",
    "org/apache/maven/its/install/jsj/test/0.1/test-0.1-javadoc.jar",
};

String[] pathsWhichShouldNotExist =
{
    "org/apache/maven/its/install/jsj/test/0.1/test-0.1.jar.md5",
    "org/apache/maven/its/install/jsj/test/0.1/test-0.1.jar.sha1",
    "org/apache/maven/its/install/jsj/test/0.1/test-0.1.pom.md5",
    "org/apache/maven/its/install/jsj/test/0.1/test-0.1.pom.sha1",
    "org/apache/maven/its/install/jsj/test/0.1/test-0.1-sources.jar.md5",
    "org/apache/maven/its/install/jsj/test/0.1/test-0.1-sources.jar.sha1",
    "org/apache/maven/its/install/jsj/test/0.1/test-0.1-javadoc.jar.md5",
    "org/apache/maven/its/install/jsj/test/0.1/test-0.1-javadoc.jar.sha1",
};

for ( String path : paths )
{
    File file = new File( localRepositoryPath, path );
    System.out.println( "Checking for existence of " + file );
    if ( !file.isFile() )
    {
        throw new FileNotFoundException( "Missing: " + file.getAbsolutePath() );
    }
}

for ( String path : pathsWhichShouldNotExist )
{
    File file = new File( localRepositoryPath, path );
    System.out.println( "Checking for non existence of " + file );
    if ( file.isFile() )
    {
        throw new IOException( "Missing: " + file.getAbsolutePath() );
    }
}

return true;
